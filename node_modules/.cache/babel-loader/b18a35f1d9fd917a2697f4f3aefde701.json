{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, useFormikContext } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPhrase = () => {\n  _s();\n  const [isHidden, setHidden] = useState(true);\n  const defaultPhraseColor = 'lightWood';\n  const {\n    values\n  } = useFormikContext();\n  useEffect(() => {\n    if (values.phraseType !== \"\") {\n      setHidden(false);\n    }\n  }, [values]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        phraseType: '',\n        phraseText: '',\n        phraseColor: defaultPhraseColor\n      },\n      validationSchema: Yup.object({\n        phraseType: Yup.string().oneOf(['family', 'friends', 'custom'], 'Phrase required').required('Required'),\n        phraseText: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i).required('Required')\n        }),\n        phraseColor: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().oneOf(['lightWood', 'darkWood'], 'Color required').required('Required')\n        })\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: _ref2 => {\n        let {\n          errors,\n          touched\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"phraseType\",\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"default\",\n              children: \"Choose a Phrase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"family\",\n              children: \"Family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"friends\",\n              children: \"Friends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phraseType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 31\n          }, this), touched.phraseType ? setHidden(false) : null, !isHidden ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"phraseText\",\n              type: \"text\",\n              placeholder: \"Choose Text...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"phraseText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"phraseColor\",\n              as: \"select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lightWood\",\n                children: \"Light Wood\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"darkWood\",\n                children: \"Dark Wood\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"phraseColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n_s(AddPhrase, \"dV3qtxtVr6hzjxnr13Qa5+FHH2o=\", false, function () {\n  return [useFormikContext];\n});\n_c = AddPhrase;\nexport default AddPhrase;\nvar _c;\n$RefreshReg$(_c, \"AddPhrase\");","map":{"version":3,"names":["React","useEffect","useState","Container","Box","InputLabel","Select","MenuItem","Input","Button","Fragment","useDispatch","nextButtonEnabled","lightWoodBackground","darkWoodBackground","customPhraseAdded","defaultPhraseAdded","Yup","Formik","Field","Form","ErrorMessage","useFormikContext","AddPhrase","isHidden","setHidden","defaultPhraseColor","values","phraseType","phraseText","phraseColor","object","string","oneOf","required","when","is","then","matches","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched"],"sources":["/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, useFormikContext } from 'formik';\n\nconst AddPhrase = () => {\n      const [isHidden, setHidden] = useState(true);\n      const defaultPhraseColor = 'lightWood';\n\n      const {values} = useFormikContext();\n      useEffect(() => {\n            if(values.phraseType !== \"\") {\n                  setHidden(false);\n            }\n      }, [values]);\n      \n      return(\n            <div>\n                  <h1>Add Phrase</h1>\n                  <Formik\n                        initialValues={{phraseType: '', phraseText: '', phraseColor: defaultPhraseColor}}\n                        validationSchema={Yup.object({\n                              phraseType: Yup.string().oneOf(\n                                    ['family', 'friends', 'custom'],\n                                    'Phrase required'\n                              ).required('Required'),\n                              phraseText: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string()\n                                          .matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i)\n                                          .required('Required'),\n                              }),\n                              phraseColor: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string().oneOf(\n                                          ['lightWood', 'darkWood'],\n                                          'Color required'\n                                    ).required('Required'),\n                              }),\n                        })}\n                        onSubmit={(values, {setSubmitting}) => {\n                              setTimeout(() => {\n                                    alert(JSON.stringify(values, null, 2));\n                                    setSubmitting(false);\n                              }, 400);\n                        }}\n                        >\n                        { ({errors, touched}) => (\n                        <Form>\n                              <Field name=\"phraseType\" as=\"select\">\n                                    <option value=\"default\">Choose a Phrase</option>\n                                    <option value=\"family\">Family</option>      \n                                    <option value=\"friends\">Friends</option>\n                                    <option value=\"custom\">Personalizado</option>\n                              </Field>\n                              <ErrorMessage name=\"phraseType\" />\n                              { touched.phraseType ? setHidden(false) : null }\n                              { !isHidden ? \n                                    <Fragment>\n                                          <Field name=\"phraseText\" type=\"text\" placeholder=\"Choose Text...\"/>\n                                          <ErrorMessage name=\"phraseText\" />\n                                          <Field name=\"phraseColor\" as=\"select\">\n                                                <option value=\"lightWood\">Light Wood</option>      \n                                                <option value=\"darkWood\">Dark Wood</option>\n                                          </Field>\n                                          <ErrorMessage name=\"phraseColor\" />\n\n                                          <button type=\"submit\">Submit</button>\n                                    </Fragment>\n                                    : null\n                              }\n                        </Form>\n                        )}\n                  </Formik>\n            </div>\n      );\n}\n\nexport default AddPhrase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}