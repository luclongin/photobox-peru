{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: null,\n  imgSrc: null,\n  imgResult: null,\n  imgDimensions: null\n}];\nconst photoSlice = createSlice({\n  name: 'photos',\n  initialState,\n  reducers: {\n    photoAdded: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(imgSrc, imgResult, imgDimensions) {\n        return {\n          payload: {\n            id: nanoid(),\n            imgSrc,\n            imgResult,\n            imgDimensions\n          }\n        };\n      }\n    },\n    photoUpdated: {\n      reducer(state, action) {\n        const {\n          id,\n          imgResult\n        } = action.payload;\n        const existingPhoto = state.find(photo => photo.id === id);\n        if (existingPhoto) {\n          existingPhoto.imgResult = imgResult;\n        }\n      }\n    }\n  }\n});\nexport const {\n  photoAdded\n} = photoSlice.actions;\nexport default photoSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","id","imgSrc","imgResult","imgDimensions","photoSlice","name","reducers","photoAdded","reducer","state","action","push","payload","prepare","photoUpdated","existingPhoto","find","photo","actions"],"sources":["/home/luc/Documents/photobox-peru/src/features/photoEdition/PhotoSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n      {id: null, imgSrc: null, imgResult: null, imgDimensions: null}\n]\n\nconst photoSlice = createSlice({\n      name: 'photos',\n      initialState,\n      reducers: {\n            photoAdded: {\n                  reducer(state, action) {\n                        state.push(action.payload)\n                  },\n                  prepare(imgSrc, imgResult, imgDimensions) {\n                        return {\n                              payload: {\n                                    id: nanoid(),\n                                    imgSrc,\n                                    imgResult,\n                                    imgDimensions\n                              }\n                        }\n                  }\n            },\n            photoUpdated: {\n                  reducer(state, action) {\n                        const {id, imgResult} = action.payload;\n                        const existingPhoto = state.find(photo => photo.id === id);\n                        if(existingPhoto) {\n                              existingPhoto.imgResult = imgResult;\n                        }\n                  }\n            }\n      }\n})\n\nexport const {photoAdded} = photoSlice.actions;\n\n\nexport default photoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,YAAY,GAAG,CACf;EAACC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,IAAI;EAAEC,SAAS,EAAE,IAAI;EAAEC,aAAa,EAAE;AAAI,CAAC,CACnE;AAED,MAAMC,UAAU,GAAGP,WAAW,CAAC;EACzBQ,IAAI,EAAE,QAAQ;EACdN,YAAY;EACZO,QAAQ,EAAE;IACJC,UAAU,EAAE;MACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;QACjBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAChC,CAAC;MACDC,OAAO,CAACZ,MAAM,EAAEC,SAAS,EAAEC,aAAa,EAAE;QACpC,OAAO;UACDS,OAAO,EAAE;YACHZ,EAAE,EAAEF,MAAM,EAAE;YACZG,MAAM;YACNC,SAAS;YACTC;UACN;QACN,CAAC;MACP;IACN,CAAC;IACDW,YAAY,EAAE;MACRN,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;QACjB,MAAM;UAACV,EAAE;UAAEE;QAAS,CAAC,GAAGQ,MAAM,CAACE,OAAO;QACtC,MAAMG,aAAa,GAAGN,KAAK,CAACO,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACjB,EAAE,KAAKA,EAAE,CAAC;QAC1D,IAAGe,aAAa,EAAE;UACZA,aAAa,CAACb,SAAS,GAAGA,SAAS;QACzC;MACN;IACN;EACN;AACN,CAAC,CAAC;AAEF,OAAO,MAAM;EAACK;AAAU,CAAC,GAAGH,UAAU,CAACc,OAAO;AAG9C,eAAed,UAAU,CAACI,OAAO"},"metadata":{},"sourceType":"module"}