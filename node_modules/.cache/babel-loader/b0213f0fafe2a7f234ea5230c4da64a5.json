{"ast":null,"code":"export const createImage = url => new Promise((resolve, reject) => {\n  const image = new Image();\n  image.addEventListener('load', () => resolve(image));\n  image.addEventListener('error', error => reject(error));\n  image.setAttribute('crossOrigin', 'anonymous'); // needed to avoid cross-origin issues on CodeSandbox\n  image.src = url;\n});\nexport function getRadianAngle(degreeValue) {\n  return degreeValue * Math.PI / 180;\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation);\n  return {\n    width: Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height: Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height)\n  };\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop) {\n  let rotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let flip = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    horizontal: false,\n    vertical: false\n  };\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return null;\n  }\n  const rotRad = getRadianAngle(rotation);\n\n  // calculate bounding box of the rotated image\n  const {\n    width: bBoxWidth,\n    height: bBoxHeight\n  } = rotateSize(image.width, image.height, rotation);\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth;\n  canvas.height = bBoxHeight;\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\n  ctx.rotate(rotRad);\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\n  ctx.translate(-image.width / 2, -image.height / 2);\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0);\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0);\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file));\n    }, 'image/jpeg');\n  });\n}","map":{"version":3,"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","rotateSize","width","height","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","flip","horizontal","vertical","canvas","document","createElement","ctx","getContext","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","data","getImageData","x","y","putImageData","toBlob","file","URL","createObjectURL"],"sources":["/home/luc/Documents/photobox-peru/src/utils/cropImage.js"],"sourcesContent":["export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', (error) => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    return null\n  }\n\n  const rotRad = getRadianAngle(rotation)\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  )\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth\n  canvas.height = bBoxHeight\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2)\n  ctx.rotate(rotRad)\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1)\n  ctx.translate(-image.width / 2, -image.height / 2)\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0)\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  )\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0)\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}