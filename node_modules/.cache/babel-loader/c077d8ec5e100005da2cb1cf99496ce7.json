{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, FormikProps } from 'formik';\nimport { FormControl } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPhrase = () => {\n  _s();\n  const [isHidden, setHidden] = useState(true);\n  const defaultPhraseColor = 'lightWood';\n  const [selectedPhrase, setSelectedPhrase] = useState('');\n  const handleSelectChange = e => {\n    setSelectedPhrase(e.target.value);\n  };\n  useEffect(() => {\n    if (selectedPhrase === 'custom') {\n      setHidden(false);\n    }\n  }, [selectedPhrase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        phraseType: {\n          selectedPhrase\n        },\n        phraseText: '',\n        phraseColor: defaultPhraseColor\n      },\n      validationSchema: Yup.object({\n        phraseText: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i).required('Required')\n        }),\n        phraseColor: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().oneOf(['lightWood', 'darkWood'], 'Color required').required('Required')\n        })\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"choosePhraseType\",\n            children: \"Choose a Phrase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"phraseType\",\n            value: selectedPhrase,\n            labelId: \"choosePhraseType\",\n            onChange: handleSelectChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"family\",\n              children: \"Family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"friends\",\n              children: \"Friends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"custom\",\n              children: \"Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"phraseType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }, this), !isHidden ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"phraseText\",\n            type: \"text\",\n            placeholder: \"Choose Text...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phraseText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"phraseColor\",\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lightWood\",\n              children: \"Light Wood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"darkWood\",\n              children: \"Dark Wood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phraseColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n_s(AddPhrase, \"O/FPpWUumHG8zBgwM77BquYf4PQ=\");\n_c = AddPhrase;\nexport default AddPhrase;\nvar _c;\n$RefreshReg$(_c, \"AddPhrase\");","map":{"version":3,"names":["React","useEffect","useState","Container","Box","InputLabel","Select","MenuItem","Input","Button","Fragment","useDispatch","nextButtonEnabled","lightWoodBackground","darkWoodBackground","customPhraseAdded","defaultPhraseAdded","Yup","Formik","Field","Form","ErrorMessage","FormikProps","FormControl","AddPhrase","isHidden","setHidden","defaultPhraseColor","selectedPhrase","setSelectedPhrase","handleSelectChange","e","target","value","phraseType","phraseText","phraseColor","object","string","when","is","then","matches","required","oneOf","values","setSubmitting","setTimeout","alert","JSON","stringify"],"sources":["/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, FormikProps } from 'formik';\nimport {FormControl} from \"@mui/material\";\nconst AddPhrase = () => {\n      const [isHidden, setHidden] = useState(true);\n      const defaultPhraseColor = 'lightWood';\n      const [selectedPhrase, setSelectedPhrase] = useState('');\n\n      const handleSelectChange = (e) => {\n            setSelectedPhrase(e.target.value);\n      }\n\n      useEffect(() => {\n            if(selectedPhrase === 'custom') {\n                  setHidden(false);\n            }\n      }, [selectedPhrase])\n\n      return(\n            <div>\n                  <h1>Add Phrase</h1>\n                  <Formik\n                        initialValues={{phraseType: {selectedPhrase}, phraseText: '', phraseColor: defaultPhraseColor}}\n                        validationSchema={Yup.object({\n                              phraseText: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string()\n                                          .matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i)\n                                          .required('Required'),\n                              }),\n                              phraseColor: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string().oneOf(\n                                          ['lightWood', 'darkWood'],\n                                          'Color required'\n                                    ).required('Required'),\n                              }),\n                        })}\n                        onSubmit={(values, {setSubmitting}) => {\n                              setTimeout(() => {\n                                    alert(JSON.stringify(values, null, 2));\n                                    setSubmitting(false);\n                              }, 400);\n                        }}\n                        >\n                        <Form>\n                              <FormControl fullWidth>\n                                    <InputLabel id=\"choosePhraseType\">Choose a Phrase</InputLabel>\n                                    <Select name=\"phraseType\" value={selectedPhrase} labelId=\"choosePhraseType\" onChange={handleSelectChange}>\n                                          <MenuItem value=\"family\">Family</MenuItem>      \n                                          <MenuItem value=\"friends\">Friends</MenuItem>\n                                          <MenuItem value=\"custom\">Personalizado</MenuItem> \n                                    </Select>\n                              </FormControl>                              \n                              <ErrorMessage name=\"phraseType\" />\n                              { !isHidden ? \n                                    <Fragment>\n                                          <Field name=\"phraseText\" type=\"text\" placeholder=\"Choose Text...\"/>\n                                          <ErrorMessage name=\"phraseText\" />\n                                          <Field name=\"phraseColor\" as=\"select\">\n                                                <option value=\"lightWood\">Light Wood</option>      \n                                                <option value=\"darkWood\">Dark Wood</option>\n                                          </Field>\n                                          <ErrorMessage name=\"phraseColor\" />\n\n                                          <button type=\"submit\">Submit</button>\n                                    </Fragment>\n                                    : null\n                              }\n                        </Form>\n      \n                  </Formik>\n            </div>\n      );\n}\n\nexport default AddPhrase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}