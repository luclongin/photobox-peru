{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, FormikProps } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPhrase = () => {\n  _s();\n  const [isHidden, setHidden] = useState(true);\n  const defaultPhraseColor = 'lightWood';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        phraseType: '',\n        phraseText: '',\n        phraseColor: defaultPhraseColor\n      },\n      validationSchema: Yup.object({\n        phraseType: Yup.string().oneOf(['family', 'friends', 'custom'], 'Phrase required').required('Required'),\n        phraseText: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i).required('Required')\n        }),\n        phraseColor: Yup.string().when(\"phraseType\", {\n          is: phraseType => phraseType === 'custom',\n          then: Yup.string().oneOf(['lightWood', 'darkWood'], 'Color required').required('Required')\n        })\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"phraseType\",\n          as: \"select\",\n          children: _ref2 => {\n            let {\n              field,\n              form,\n              meta\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: \"none\",\n                name: \"phraseType\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"none\",\n                  disabled: true,\n                  children: \"Choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"family\",\n                  children: \"Family\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"friends\",\n                  children: \"Friends\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"custom\",\n                  children: \"Personalizado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"phraseType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this), !isHidden ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"phraseText\",\n            type: \"text\",\n            placeholder: \"Choose Text...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phraseText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"phraseColor\",\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lightWood\",\n              children: \"Light Wood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"darkWood\",\n              children: \"Dark Wood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phraseColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n_s(AddPhrase, \"u5pYdQAgEi5jFwTzsFvWs0k87TU=\");\n_c = AddPhrase;\nexport default AddPhrase;\nvar _c;\n$RefreshReg$(_c, \"AddPhrase\");","map":{"version":3,"names":["React","useEffect","useState","Container","Box","InputLabel","Select","MenuItem","Input","Button","Fragment","useDispatch","nextButtonEnabled","lightWoodBackground","darkWoodBackground","customPhraseAdded","defaultPhraseAdded","Yup","Formik","Field","Form","ErrorMessage","FormikProps","AddPhrase","isHidden","setHidden","defaultPhraseColor","phraseType","phraseText","phraseColor","object","string","oneOf","required","when","is","then","matches","values","setSubmitting","setTimeout","alert","JSON","stringify","field","form","meta"],"sources":["/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport lightWoodBackground from '../../images/lightWood.png';\nimport darkWoodBackground from '../../images/darkWood.png';\nimport { customPhraseAdded, defaultPhraseAdded } from \"../../features/additionalPhrase/AdditionalPhraseSlice\";\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage, FormikProps } from 'formik';\n\nconst AddPhrase = () => {\n      const [isHidden, setHidden] = useState(true);\n      const defaultPhraseColor = 'lightWood';\n      \n\n      return(\n            <div>\n                  <h1>Add Phrase</h1>\n                  <Formik\n                        initialValues={{phraseType: '', phraseText: '', phraseColor: defaultPhraseColor}}\n                        validationSchema={Yup.object({\n                              phraseType: Yup.string().oneOf(\n                                    ['family', 'friends', 'custom'],\n                                    'Phrase required'\n                              ).required('Required'),\n                              phraseText: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string()\n                                          .matches(/^(?!\\s+$)[0-9a-zñáéíóúü]*/i)\n                                          .required('Required'),\n                              }),\n                              phraseColor: Yup.string().when(\"phraseType\", {\n                                    is: (phraseType => phraseType === 'custom'),\n                                    then: Yup.string().oneOf(\n                                          ['lightWood', 'darkWood'],\n                                          'Color required'\n                                    ).required('Required'),\n                              }),\n                        })}\n                        onSubmit={(values, {setSubmitting}) => {\n                              setTimeout(() => {\n                                    alert(JSON.stringify(values, null, 2));\n                                    setSubmitting(false);\n                              }, 400);\n                        }}\n                        >\n                        <Form>\n                              <Field name=\"phraseType\" as=\"select\">\n                                    {({field, form, meta}) => (\n                                    <Fragment>\n                                          <Select defaultValue='none' name=\"phraseType\">\n                                                <MenuItem value=\"none\" disabled>Choose</MenuItem>      \n                                                <MenuItem value=\"family\">Family</MenuItem>      \n                                                <MenuItem value=\"friends\">Friends</MenuItem>\n                                                <MenuItem value=\"custom\">Personalizado</MenuItem> \n                                          </Select>\n                                    </Fragment>\n                                    )}\n                              </Field>\n                              \n                              <ErrorMessage name=\"phraseType\" />\n                              { !isHidden ? \n                                    <Fragment>\n                                          <Field name=\"phraseText\" type=\"text\" placeholder=\"Choose Text...\"/>\n                                          <ErrorMessage name=\"phraseText\" />\n                                          <Field name=\"phraseColor\" as=\"select\">\n                                                <option value=\"lightWood\">Light Wood</option>      \n                                                <option value=\"darkWood\">Dark Wood</option>\n                                          </Field>\n                                          <ErrorMessage name=\"phraseColor\" />\n\n                                          <button type=\"submit\">Submit</button>\n                                    </Fragment>\n                                    : null\n                              }\n                        </Form>\n      \n                  </Formik>\n            </div>\n      );\n}\n\nexport default AddPhrase;"],"mappings":"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"},"metadata":{},"sourceType":"module"}