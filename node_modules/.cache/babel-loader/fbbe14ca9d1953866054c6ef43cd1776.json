{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/uploadPhotoDialog/uploadPhotoDialog.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { Slider, Button, Typography, Box } from '@mui/material';\nimport getCroppedImg from '../../utils/cropImage';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPhotoDialog = () => {\n  _s();\n  const dogImg = 'https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000';\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [rotation, setRotation] = useState(0);\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [croppedImage, setCroppedImage] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(dogImg, croppedAreaPixels, rotation);\n      console.log('donee', {\n        croppedImage\n      });\n      setCroppedImage(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n  const onClose = useCallback(() => {\n    setCroppedImage(null);\n  }, []);\n  const CropContainer = styled(Box)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      position: 'relative',\n      width: '100%',\n      height: 200,\n      background: '#333'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      position: \"relative\",\n      height: \"200\",\n      children: /*#__PURE__*/_jsxDEV(Cropper, {\n        image: dogImg,\n        crop: crop,\n        rotation: rotation,\n        zoom: zoom,\n        aspect: 4 / 3,\n        onCropChange: setCrop,\n        onRotationChange: setRotation,\n        onCropComplete: onCropComplete,\n        onZoomChange: setZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          classes: {\n            root: classes.sliderLabel\n          },\n          children: \"Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: zoom,\n          min: 1,\n          max: 3,\n          step: 0.1,\n          \"aria-labelledby\": \"Zoom\",\n          classes: {\n            root: classes.slider\n          },\n          onChange: (e, zoom) => setZoom(zoom)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          classes: {\n            root: classes.sliderLabel\n          },\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: rotation,\n          min: 0,\n          max: 360,\n          step: 1,\n          \"aria-labelledby\": \"Rotation\",\n          classes: {\n            root: classes.slider\n          },\n          onChange: (e, rotation) => setRotation(rotation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showCroppedImage,\n        variant: \"contained\",\n        color: \"primary\",\n        classes: {\n          root: classes.cropButton\n        },\n        children: \"Show Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n};\n_s(UploadPhotoDialog, \"Fr1RVbqZUmbiofVjBHburGzlXek=\");\n_c = UploadPhotoDialog;\nexport default UploadPhotoDialog;\n\n/*\nimport React, { useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './ImgDialog'\nimport getCroppedImg from './cropImage'\nimport { styles } from './styles'\n\n\n\n  return (\n    <div>\n      <div className={classes.cropContainer}>\n        <Cropper\n          image={dogImg}\n          crop={crop}\n          rotation={rotation}\n          zoom={zoom}\n          aspect={4 / 3}\n          onCropChange={setCrop}\n          onRotationChange={setRotation}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.controls}>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Zoom\n          </Typography>\n          <Slider\n            value={zoom}\n            min={1}\n            max={3}\n            step={0.1}\n            aria-labelledby=\"Zoom\"\n            classes={{ root: classes.slider }}\n            onChange={(e, zoom) => setZoom(zoom)}\n          />\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Rotation\n          </Typography>\n          <Slider\n            value={rotation}\n            min={0}\n            max={360}\n            step={1}\n            aria-labelledby=\"Rotation\"\n            classes={{ root: classes.slider }}\n            onChange={(e, rotation) => setRotation(rotation)}\n          />\n        </div>\n        <Button\n          onClick={showCroppedImage}\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{ root: classes.cropButton }}\n        >\n          Show Result\n        </Button>\n      </div>\n      <ImgDialog img={croppedImage} onClose={onClose} />\n    </div>\n  )\n}\n\nconst StyledDemo = withStyles(styles)(Demo)\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<StyledDemo />, rootElement)\n\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoDialog\");","map":{"version":3,"names":["React","useState","useCallback","Cropper","Slider","Button","Typography","Box","getCroppedImg","styled","UploadPhotoDialog","dogImg","crop","setCrop","x","y","rotation","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","onCropComplete","croppedArea","showCroppedImage","console","log","e","error","onClose","CropContainer","theme","position","width","height","background","classes","controls","sliderContainer","root","sliderLabel","slider","cropButton"],"sources":["/home/luc/Documents/photobox-peru/src/components/uploadPhotoDialog/uploadPhotoDialog.component.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport Cropper from 'react-easy-crop'\nimport { Slider, Button, Typography, Box} from '@mui/material';\nimport getCroppedImg from '../../utils/cropImage';\nimport {styled} from '@mui/material/styles';\n\nconst UploadPhotoDialog = () => {\n      const dogImg =\n      'https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000';\n\n      const [crop, setCrop] = useState({ x: 0, y: 0 });\n      const [rotation, setRotation] = useState(0);\n      const [zoom, setZoom] = useState(1);\n      const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n      const [croppedImage, setCroppedImage] = useState(null);\n\n      const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n      }, [])\n\n      const showCroppedImage = useCallback(async () => {\n      try {\n            const croppedImage = await getCroppedImg(\n            dogImg,\n            croppedAreaPixels,\n            rotation\n            )\n            console.log('donee', { croppedImage });\n            setCroppedImage(croppedImage);\n      } catch (e) {\n            console.error(e);\n      }\n      }, [croppedAreaPixels, rotation])\n\n      const onClose = useCallback(() => {\n      setCroppedImage(null)\n      }, []);\n\n      const CropContainer = styled(Box)(({ theme }) => ({\n        position: 'relative',\n        width: '100%',\n        height: 200,\n        background: '#333',\n      }));\n\n      return(\n            <Container fluid=\"true\">\n              <div position=\"relative\" height=\"200\">\n                <Cropper\n                      image={dogImg}\n                      crop={crop}\n                      rotation={rotation}\n                      zoom={zoom}\n                      aspect={4/3}\n                      onCropChange={setCrop}\n                      onRotationChange={setRotation}\n                      onCropComplete={onCropComplete}\n                      onZoomChange={setZoom}\n                /> \n              </div>\n              <div className={classes.controls}>\n            <div className={classes.sliderContainer}>\n              <Typography\n                variant=\"overline\"\n                classes={{ root: classes.sliderLabel }}\n              >\n                Zoom\n              </Typography>\n              <Slider\n                value={zoom}\n                min={1}\n                max={3}\n                step={0.1}\n                aria-labelledby=\"Zoom\"\n                classes={{ root: classes.slider }}\n                onChange={(e, zoom) => setZoom(zoom)}\n              />\n            </div>\n            <div className={classes.sliderContainer}>\n              <Typography\n                variant=\"overline\"\n                classes={{ root: classes.sliderLabel }}\n              >\n                Rotation\n              </Typography>\n              <Slider\n                value={rotation}\n                min={0}\n                max={360}\n                step={1}\n                aria-labelledby=\"Rotation\"\n                classes={{ root: classes.slider }}\n                onChange={(e, rotation) => setRotation(rotation)}\n              />\n            </div>\n            <Button\n              onClick={showCroppedImage}\n              variant=\"contained\"\n              color=\"primary\"\n              classes={{ root: classes.cropButton }}\n            >\n              Show Result\n            </Button>\n          </div>\n\n            </Container>\n            \n            \n            \n      );\n}\n\nexport default UploadPhotoDialog;\n\n/*\nimport React, { useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './ImgDialog'\nimport getCroppedImg from './cropImage'\nimport { styles } from './styles'\n\n\n\n  return (\n    <div>\n      <div className={classes.cropContainer}>\n        <Cropper\n          image={dogImg}\n          crop={crop}\n          rotation={rotation}\n          zoom={zoom}\n          aspect={4 / 3}\n          onCropChange={setCrop}\n          onRotationChange={setRotation}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.controls}>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Zoom\n          </Typography>\n          <Slider\n            value={zoom}\n            min={1}\n            max={3}\n            step={0.1}\n            aria-labelledby=\"Zoom\"\n            classes={{ root: classes.slider }}\n            onChange={(e, zoom) => setZoom(zoom)}\n          />\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Rotation\n          </Typography>\n          <Slider\n            value={rotation}\n            min={0}\n            max={360}\n            step={1}\n            aria-labelledby=\"Rotation\"\n            classes={{ root: classes.slider }}\n            onChange={(e, rotation) => setRotation(rotation)}\n          />\n        </div>\n        <Button\n          onClick={showCroppedImage}\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{ root: classes.cropButton }}\n        >\n          Show Result\n        </Button>\n      </div>\n      <ImgDialog img={croppedImage} onClose={onClose} />\n    </div>\n  )\n}\n\nconst StyledDemo = withStyles(styles)(Demo)\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<StyledDemo />, rootElement)\n\n\n\n*/"],"mappings":"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AAA;UAAA;UAAA;UAAA;QAAA,QAG5B,eACb,QAAC,MAAM;UACL,KAAK,EAAE1B,QAAS;UAChB,GAAG,EAAE,CAAE;UACP,GAAG,EAAE,GAAI;UACT,IAAI,EAAE,CAAE;UACR,mBAAgB,UAAU;UAC1B,OAAO,EAAE;YAAEyB,IAAI,EAAEH,OAAO,CAACK;UAAO,CAAE;UAClC,QAAQ,EAAE,CAACd,CAAC,EAAEb,QAAQ,KAAKC,WAAW,CAACD,QAAQ;QAAE;UAAA;UAAA;UAAA;QAAA,QACjD;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN,QAAC,MAAM;QACL,OAAO,EAAEU,gBAAiB;QAC1B,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,SAAS;QACf,OAAO,EAAE;UAAEe,IAAI,EAAEH,OAAO,CAACM;QAAW,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG/B;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEQ;AAKxB,CAAC;AAAA,GAxGKlC,iBAAiB;AAAA,KAAjBA,iBAAiB;AA0GvB,eAAeA,iBAAiB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArFA;AAAA"},"metadata":{},"sourceType":"module"}