{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { Container } from \"@mui/material\";\nimport UploadPhotoDialog from \"../uploadPhotoDialog/uploadPhotoDialog.component\";\nimport UploadPhotoCardEmpty from \"../uploadPhotoCardEmpty/uploadPhotoCardEmpty.component\";\nimport UploadPhotoCardHover from \"../uploadPhotoCardHover/uploadPhotoCardHover.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPhotoCard = _ref => {\n  _s();\n  let {\n    formData,\n    setFormData\n  } = _ref;\n  const [emptyCardHidden, setEmptyCardHidden] = useState(false);\n  const [newUploadPhotoCard, setNewUploadPhotoCard] = useState({\n    srcImg: null,\n    result: null,\n    dialogOpen: false\n  });\n  const handleOpen = () => {\n    setNewUploadPhotoCard({\n      ...newUploadPhotoCard,\n      dialogOpen: true\n    });\n  };\n  const handleClose = () => {\n    setNewUploadPhotoCard({\n      ...newUploadPhotoCard,\n      dialogOpen: false\n    });\n  };\n  useEffect(() => {\n    setHidden(false);\n  }, [newUploadPhotoCard.srcImg]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      component: \"label\",\n      position: \"relative\",\n      sx: {\n        padding: 0,\n        margin: 0\n      },\n      children: [!isHidden ? /*#__PURE__*/_jsxDEV(UploadPhotoCardEmpty, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 44\n      }, this) : null, isHidden ? /*#__PURE__*/_jsxDEV(UploadPhotoCardHover, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        handleOpen: handleOpen,\n        handleClose: handleClose,\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 43\n      }, this) : null, /*#__PURE__*/_jsxDEV(UploadPhotoDialog, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        open: newUploadPhotoCard.dialogOpen,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n_s(UploadPhotoCard, \"9JBanX5G2C3im0yl3THPYFwOCM8=\");\n_c = UploadPhotoCard;\nexport default UploadPhotoCard;\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoCard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Paper","styled","Typography","AddIcon","Container","UploadPhotoDialog","UploadPhotoCardEmpty","UploadPhotoCardHover","UploadPhotoCard","formData","setFormData","emptyCardHidden","setEmptyCardHidden","newUploadPhotoCard","setNewUploadPhotoCard","srcImg","result","dialogOpen","handleOpen","handleClose","setHidden","padding","margin","isHidden","position","top","left"],"sources":["/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Box, Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport {Container} from \"@mui/material\";\nimport UploadPhotoDialog from \"../uploadPhotoDialog/uploadPhotoDialog.component\";\nimport UploadPhotoCardEmpty from \"../uploadPhotoCardEmpty/uploadPhotoCardEmpty.component\";\nimport UploadPhotoCardHover from \"../uploadPhotoCardHover/uploadPhotoCardHover.component\";\n\nconst UploadPhotoCard = ({formData, setFormData}) => {\n      const [emptyCardHidden, setEmptyCardHidden] = useState(false);\n      const [newUploadPhotoCard, setNewUploadPhotoCard] = useState({\n            srcImg: null,\n            result: null,\n            dialogOpen: false\n      });\n\n      const handleOpen = () => {\n            setNewUploadPhotoCard({\n                  ...newUploadPhotoCard,\n                  dialogOpen: true\n            });\n      }\n      \n      const handleClose = () => {\n            setNewUploadPhotoCard({\n                  ...newUploadPhotoCard,\n                  dialogOpen: false\n            });\n      }\n\n      useEffect(() => {\n            setHidden(false);\n      }, [newUploadPhotoCard.srcImg])\n\n      return(\n            <Container>\n                  <Button component=\"label\" position=\"relative\" sx={{\n                        padding: 0,\n                        margin: 0,\n                  }}>\n                        {\n                              !isHidden ? (<UploadPhotoCardEmpty newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                              }} />\n                              ): null \n                        }\n                        {\n                              isHidden ? (<UploadPhotoCardHover newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} handleOpen={handleOpen} handleClose={handleClose} sx={{\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                              }}/>\n                              ): null\n                        }\n                        <UploadPhotoDialog newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} open={newUploadPhotoCard.dialogOpen} handleClose={handleClose} />\n                  </Button>\n                  \n            </Container>\n      );\n}\n\nexport default UploadPhotoCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACtE,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAAQC,SAAS,QAAO,eAAe;AACvC,OAAOC,iBAAiB,MAAM,kDAAkD;AAChF,OAAOC,oBAAoB,MAAM,wDAAwD;AACzF,OAAOC,oBAAoB,MAAM,wDAAwD;AAAC;AAE1F,MAAMC,eAAe,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAACC,QAAQ;IAAEC;EAAW,CAAC;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC;IACvDkB,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAM;IACnBJ,qBAAqB,CAAC;MAChB,GAAGD,kBAAkB;MACrBI,UAAU,EAAE;IAClB,CAAC,CAAC;EACR,CAAC;EAED,MAAME,WAAW,GAAG,MAAM;IACpBL,qBAAqB,CAAC;MAChB,GAAGD,kBAAkB;MACrBI,UAAU,EAAE;IAClB,CAAC,CAAC;EACR,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACVwB,SAAS,CAAC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACP,kBAAkB,CAACE,MAAM,CAAC,CAAC;EAE/B,oBACM,QAAC,SAAS;IAAA,uBACJ,QAAC,MAAM;MAAC,SAAS,EAAC,OAAO;MAAC,QAAQ,EAAC,UAAU;MAAC,EAAE,EAAE;QAC5CM,OAAO,EAAE,CAAC;QACVC,MAAM,EAAE;MACd,CAAE;MAAA,WAEU,CAACC,QAAQ,gBAAI,QAAC,oBAAoB;QAAC,kBAAkB,EAAEV,kBAAmB;QAAC,qBAAqB,EAAEC,qBAAsB;QAAC,EAAE,EAAE;UACvHU,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE;QACZ;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,GACF,IAAI,EAGPH,QAAQ,gBAAI,QAAC,oBAAoB;QAAC,kBAAkB,EAAEV,kBAAmB;QAAC,qBAAqB,EAAEC,qBAAsB;QAAC,UAAU,EAAEI,UAAW;QAAC,WAAW,EAAEC,WAAY;QAAC,EAAE,EAAE;UAC9KK,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE;QACN;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,GACD,IAAI,eAEb,QAAC,iBAAiB;QAAC,kBAAkB,EAAEb,kBAAmB;QAAC,qBAAqB,EAAEC,qBAAsB;QAAC,IAAI,EAAED,kBAAkB,CAACI,UAAW;QAAC,WAAW,EAAEE;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACvK;IAAA;IAAA;IAAA;EAAA,QAEH;AAExB,CAAC;AAAA,GArDKX,eAAe;AAAA,KAAfA,eAAe;AAuDrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}