{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/uploadPhotoDialog/uploadPhotoDialog.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { Container, Slider, Button, Typography, Box } from '@mui/material';\nimport getCroppedImg from '../../utils/cropImage';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPhotoDialog = () => {\n  _s();\n  const dogImg = 'https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000';\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [rotation, setRotation] = useState(0);\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [croppedImage, setCroppedImage] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(dogImg, croppedAreaPixels, rotation);\n      console.log('donee', {\n        croppedImage\n      });\n      setCroppedImage(croppedImage);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n  const onClose = useCallback(() => {\n    setCroppedImage(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"uploadPhotoDialogContainer\",\n    fluid: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      position: \"relative\",\n      height: \"200\",\n      children: /*#__PURE__*/_jsxDEV(Cropper, {\n        image: dogImg,\n        crop: crop,\n        rotation: rotation,\n        zoom: zoom,\n        aspect: 4 / 3,\n        onCropChange: setCrop,\n        onRotationChange: setRotation,\n        onCropComplete: onCropComplete,\n        onZoomChange: setZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flex: '1',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          children: \"Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: zoom,\n          min: 1,\n          max: 3,\n          step: 0.1,\n          \"aria-labelledby\": \"Zoom\",\n          onChange: (e, zoom) => setZoom(zoom),\n          style: {\n            padding: '22px 0px',\n            marginLeft: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showCroppedImage,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Show Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n_s(UploadPhotoDialog, \"Fr1RVbqZUmbiofVjBHburGzlXek=\");\n_c = UploadPhotoDialog;\nexport default UploadPhotoDialog;\n\n/*\nimport React, { useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './ImgDialog'\nimport getCroppedImg from './cropImage'\nimport { styles } from './styles'\n\n\n\n  return (\n    <div>\n      <div className={classes.cropContainer}>\n        <Cropper\n          image={dogImg}\n          crop={crop}\n          rotation={rotation}\n          zoom={zoom}\n          aspect={4 / 3}\n          onCropChange={setCrop}\n          onRotationChange={setRotation}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.controls}>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Zoom\n          </Typography>\n          <Slider\n            value={zoom}\n            min={1}\n            max={3}\n            step={0.1}\n            aria-labelledby=\"Zoom\"\n            classes={{ root: classes.slider }}\n            onChange={(e, zoom) => setZoom(zoom)}\n          />\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Rotation\n          </Typography>\n          <Slider\n            value={rotation}\n            min={0}\n            max={360}\n            step={1}\n            aria-labelledby=\"Rotation\"\n            classes={{ root: classes.slider }}\n            onChange={(e, rotation) => setRotation(rotation)}\n          />\n        </div>\n        <Button\n          onClick={showCroppedImage}\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{ root: classes.cropButton }}\n        >\n          Show Result\n        </Button>\n      </div>\n      <ImgDialog img={croppedImage} onClose={onClose} />\n    </div>\n  )\n}\n\nconst StyledDemo = withStyles(styles)(Demo)\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<StyledDemo />, rootElement)\n\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoDialog\");","map":{"version":3,"names":["React","useState","useCallback","Cropper","Container","Slider","Button","Typography","Box","getCroppedImg","styled","UploadPhotoDialog","dogImg","crop","setCrop","x","y","rotation","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","onCropComplete","croppedArea","showCroppedImage","console","log","e","error","onClose","padding","display","flexDirection","alignItems","flex","marginLeft"],"sources":["/home/luc/Documents/photobox-peru/src/components/uploadPhotoDialog/uploadPhotoDialog.component.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport Cropper from 'react-easy-crop'\nimport { Container, Slider, Button, Typography, Box} from '@mui/material';\nimport getCroppedImg from '../../utils/cropImage';\nimport {styled} from '@mui/material/styles';\n\nconst UploadPhotoDialog = () => {\n      const dogImg =\n      'https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000';\n\n      const [crop, setCrop] = useState({ x: 0, y: 0 });\n      const [rotation, setRotation] = useState(0);\n      const [zoom, setZoom] = useState(1);\n      const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n      const [croppedImage, setCroppedImage] = useState(null);\n\n      const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n      }, [])\n\n      const showCroppedImage = useCallback(async () => {\n      try {\n            const croppedImage = await getCroppedImg(\n            dogImg,\n            croppedAreaPixels,\n            rotation\n            )\n            console.log('donee', { croppedImage });\n            setCroppedImage(croppedImage);\n      } catch (e) {\n            console.error(e);\n      }\n      }, [croppedAreaPixels, rotation])\n\n      const onClose = useCallback(() => {\n      setCroppedImage(null)\n      }, []);\n\n      return(\n            <Container className=\"uploadPhotoDialogContainer\" fluid=\"true\">\n              <div position=\"relative\" height=\"200\">\n                <Cropper\n                      image={dogImg}\n                      crop={crop}\n                      rotation={rotation}\n                      zoom={zoom}\n                      aspect={4/3}\n                      onCropChange={setCrop}\n                      onRotationChange={setRotation}\n                      onCropComplete={onCropComplete}\n                      onZoomChange={setZoom}\n                /> \n              </div>\n              <Box sx={{\n                padding: 16,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch',\n              }}>\n                <Box sx={{\n                  display: 'flex',\n                  flex: '1',\n                  alignItems: 'center',}}\n                >\n                  <Typography\n                    variant=\"overline\"                  >\n                    Zoom\n                  </Typography>\n                  <Slider\n                    value={zoom}\n                    min={1}\n                    max={3}\n                    step={0.1}\n                    aria-labelledby=\"Zoom\"\n                    onChange={(e, zoom) => setZoom(zoom)}\n                    style={{\n                      padding: '22px 0px',\n                      marginLeft: 16,\n                    }}\n                  />\n                </Box>\n                <Button\n                  onClick={showCroppedImage}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Show Result\n                </Button>\n              </Box>\n            </Container>\n            \n            \n            \n      );\n}\n\nexport default UploadPhotoDialog;\n\n/*\nimport React, { useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport ImgDialog from './ImgDialog'\nimport getCroppedImg from './cropImage'\nimport { styles } from './styles'\n\n\n\n  return (\n    <div>\n      <div className={classes.cropContainer}>\n        <Cropper\n          image={dogImg}\n          crop={crop}\n          rotation={rotation}\n          zoom={zoom}\n          aspect={4 / 3}\n          onCropChange={setCrop}\n          onRotationChange={setRotation}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      <div className={classes.controls}>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Zoom\n          </Typography>\n          <Slider\n            value={zoom}\n            min={1}\n            max={3}\n            step={0.1}\n            aria-labelledby=\"Zoom\"\n            classes={{ root: classes.slider }}\n            onChange={(e, zoom) => setZoom(zoom)}\n          />\n        </div>\n        <div className={classes.sliderContainer}>\n          <Typography\n            variant=\"overline\"\n            classes={{ root: classes.sliderLabel }}\n          >\n            Rotation\n          </Typography>\n          <Slider\n            value={rotation}\n            min={0}\n            max={360}\n            step={1}\n            aria-labelledby=\"Rotation\"\n            classes={{ root: classes.slider }}\n            onChange={(e, rotation) => setRotation(rotation)}\n          />\n        </div>\n        <Button\n          onClick={showCroppedImage}\n          variant=\"contained\"\n          color=\"primary\"\n          classes={{ root: classes.cropButton }}\n        >\n          Show Result\n        </Button>\n      </div>\n      <ImgDialog img={croppedImage} onClose={onClose} />\n    </div>\n  )\n}\n\nconst StyledDemo = withStyles(styles)(Demo)\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<StyledDemo />, rootElement)\n\n\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}