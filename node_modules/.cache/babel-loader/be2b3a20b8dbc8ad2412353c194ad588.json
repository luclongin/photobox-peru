{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { Container } from \"@mui/material\";\nimport UploadPhotoDialog from \"../uploadPhotoDialog/uploadPhotoDialog.component\";\nimport UploadPhotoCardEmpty from \"../uploadPhotoCardEmpty/uploadPhotoCardEmpty.component\";\nimport UploadPhotoCardHover from \"../uploadPhotoCardHover/uploadPhotoCardHover.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPhotoCard = _ref => {\n  _s();\n  let {\n    cardId,\n    formData,\n    setFormData,\n    handleDeleteCard\n  } = _ref;\n  const [emptyCardHidden, setEmptyCardHidden] = useState(false);\n  const [newUploadPhotoCard, setNewUploadPhotoCard] = useState({\n    id: cardId,\n    imgSrc: null,\n    result: null,\n    dialogOpen: false\n  });\n  const handleOpen = () => {\n    setNewUploadPhotoCard({\n      ...newUploadPhotoCard,\n      dialogOpen: true\n    });\n  };\n  const handleClose = () => {\n    setNewUploadPhotoCard({\n      ...newUploadPhotoCard,\n      dialogOpen: false\n    });\n  };\n  useEffect(() => {\n    if (newUploadPhotoCard.imgSrc !== null) {\n      setEmptyCardHidden(true);\n    }\n    console.log(\"USEEFFECT, \", formData.cardList);\n    const cardExists = false;\n    if (formData.cardList.length > 0) {\n      console.log(\"YO\");\n      formData.cardList.map(existingCard => {\n        console.log(\"asdasd\");\n        // if affected Card already exists\n        if (existingCard.imgSrc === newUploadPhotoCard.imgSrc) {\n          console.log(\"CARD EXISTS\");\n          cardExists = true;\n        } else {\n          console.log(\"CARD DOESN'T EXIST\");\n        }\n      });\n    }\n    if (!cardExists) {\n      setFormData({\n        ...formData,\n        cardList: [...formData.cardList, {\n          id: newUploadPhotoCard.id,\n          imgSrc: newUploadPhotoCard.imgSrc,\n          result: newUploadPhotoCard.result\n        }]\n      });\n    }\n  }, [newUploadPhotoCard]);\n\n  // this is shit\n  // you need to update the already existing uploadedPhotos.imgSrc\n  // maybe this means removing it and inserting another one.\n  // USING ID\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      component: \"label\",\n      position: \"relative\",\n      sx: {\n        padding: 0,\n        margin: 0\n      },\n      children: [!emptyCardHidden ? /*#__PURE__*/_jsxDEV(UploadPhotoCardEmpty, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        formData: formData,\n        setFormData: setFormData,\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 51\n      }, this) : null, emptyCardHidden ? /*#__PURE__*/_jsxDEV(UploadPhotoCardHover, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        handleOpen: handleOpen,\n        handleClose: handleClose,\n        formData: formData,\n        setFormData: setFormData,\n        handleDeleteCard: handleDeleteCard,\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(UploadPhotoDialog, {\n        newUploadPhotoCard: newUploadPhotoCard,\n        setNewUploadPhotoCard: setNewUploadPhotoCard,\n        open: newUploadPhotoCard.dialogOpen,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n};\n_s(UploadPhotoCard, \"KRjqZoYS21HOMwxfhTsRiaHfNRA=\");\n_c = UploadPhotoCard;\nexport default UploadPhotoCard;\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoCard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Paper","styled","Typography","AddIcon","Container","UploadPhotoDialog","UploadPhotoCardEmpty","UploadPhotoCardHover","UploadPhotoCard","cardId","formData","setFormData","handleDeleteCard","emptyCardHidden","setEmptyCardHidden","newUploadPhotoCard","setNewUploadPhotoCard","id","imgSrc","result","dialogOpen","handleOpen","handleClose","console","log","cardList","cardExists","length","map","existingCard","padding","margin","position","top","left"],"sources":["/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Box, Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport {Container} from \"@mui/material\";\nimport UploadPhotoDialog from \"../uploadPhotoDialog/uploadPhotoDialog.component\";\nimport UploadPhotoCardEmpty from \"../uploadPhotoCardEmpty/uploadPhotoCardEmpty.component\";\nimport UploadPhotoCardHover from \"../uploadPhotoCardHover/uploadPhotoCardHover.component\";\n\nconst UploadPhotoCard = ({cardId, formData, setFormData, handleDeleteCard}) => {\n      const [emptyCardHidden, setEmptyCardHidden] = useState(false);\n      const [newUploadPhotoCard, setNewUploadPhotoCard] = useState({\n            id: cardId,\n            imgSrc: null,\n            result: null,\n            dialogOpen: false,\n      });\n\n      const handleOpen = () => {\n            setNewUploadPhotoCard({\n                  ...newUploadPhotoCard,\n                  dialogOpen: true\n            });\n      }\n      \n      const handleClose = () => {\n            setNewUploadPhotoCard({\n                  ...newUploadPhotoCard,\n                  dialogOpen: false\n            });\n      }\n\n      useEffect(() => {\n            if(newUploadPhotoCard.imgSrc !== null) {\n                  setEmptyCardHidden(true);\n            }\n            console.log(\"USEEFFECT, \", formData.cardList);\n            const cardExists = false;\n            if(formData.cardList.length > 0) {\n                  console.log(\"YO\");\n                  formData.cardList.map((existingCard) => {\n                        console.log(\"asdasd\");\n                        // if affected Card already exists\n                        if (existingCard.imgSrc === newUploadPhotoCard.imgSrc) {\n                              console.log(\"CARD EXISTS\");\n                              cardExists = true;\n                        } else {\n                              console.log(\"CARD DOESN'T EXIST\");\n                        }\n                  })\n            }\n            if (!cardExists) {\n                  setFormData({\n                        ...formData,\n                        cardList: [\n                              ...formData.cardList, \n                              {\n                                    id: newUploadPhotoCard.id,\n                                    imgSrc: newUploadPhotoCard.imgSrc,\n                                    result: newUploadPhotoCard.result\n                              }\n                        ]\n                  })\n            }\n\n      }, [newUploadPhotoCard])\n\n      // this is shit\n      // you need to update the already existing uploadedPhotos.imgSrc\n      // maybe this means removing it and inserting another one.\n      // USING ID\n\n      return(\n            <Container>\n                  <Button component=\"label\" position=\"relative\" sx={{\n                        padding: 0,\n                        margin: 0,\n                  }}>\n                        {\n                              !emptyCardHidden ? (<UploadPhotoCardEmpty newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} formData={formData} setFormData={setFormData} sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                              }} />\n                              ): null \n                        }\n                        {\n                              emptyCardHidden ? (<UploadPhotoCardHover newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} handleOpen={handleOpen} handleClose={handleClose} formData={formData} setFormData={setFormData}  handleDeleteCard={handleDeleteCard} sx={{\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                              }}/>\n                              ): null\n                        }\n                        <UploadPhotoDialog newUploadPhotoCard={newUploadPhotoCard} setNewUploadPhotoCard={setNewUploadPhotoCard} open={newUploadPhotoCard.dialogOpen} handleClose={handleClose} />\n                  </Button>\n                  \n            </Container>\n      );\n}\n\nexport default UploadPhotoCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}