{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPhrase = () => {\n  _s();\n  const [phraseType, setPhraseType] = useState(\"\");\n  const [phraseColor, setPhraseColor] = useState(\"\");\n  const [phraseText, setPhraseText] = useState(\"\");\n  const [isHidden, setHidden] = useState(true);\n  const dispatch = useDispatch();\n  const backgroundColors = {\n    lightWood: \"\",\n    brownWood: \"\"\n  };\n  const handleChangeType = event => {\n    setPhraseType(event.target.value);\n    handleNextButton();\n  };\n  const handleChangeText = event => {\n    setPhraseText(event.target.value);\n  };\n  const handleChangeColor = e => {\n    setPhraseColor(e.target.value);\n  };\n  useEffect(() => {\n    if (phraseType === \"personalized\") {\n      setHidden(false);\n    }\n  }, [phraseType]);\n  const handleNextButton = () => {\n    if (phraseType === \"personalized\") {\n      // wait until text has value and select has value\n      // add better formValidation\n      dispatch(nextButtonEnabled(true));\n    } else {\n      dispatch(nextButtonEnabled(true));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"addPhraseLabel\",\n      children: \"Choose Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"addPhraseLabel\",\n      value: phraseType,\n      label: \"Phrase Type\",\n      onChange: handleChangeType,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"family\",\n        children: \"Family\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"friends\",\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"personalized\",\n        children: \"Personalizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), !isHidden ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your text\",\n        value: phraseText,\n        onChange: handleChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"addPhraseColor\",\n        children: \"Choose Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"addPhraseColor\",\n        value: phraseColor,\n        label: \"Color Type\",\n        onChange: handleChangeColor,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"brown\",\n          children: \"Brown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"yellow\",\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: {\n            phraseColor\n          }\n        },\n        children: phraseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Add Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(AddPhrase, \"XB6N0Sid47PRhvAKOD2JzMdniqM=\", false, function () {\n  return [useDispatch];\n});\n_c = AddPhrase;\nexport default AddPhrase;\nvar _c;\n$RefreshReg$(_c, \"AddPhrase\");","map":{"version":3,"names":["React","useEffect","useState","Container","Box","InputLabel","Select","MenuItem","Input","Button","Fragment","useDispatch","nextButtonEnabled","AddPhrase","phraseType","setPhraseType","phraseColor","setPhraseColor","phraseText","setPhraseText","isHidden","setHidden","dispatch","backgroundColors","lightWood","brownWood","handleChangeType","event","target","value","handleNextButton","handleChangeText","handleChangeColor","e","backgroundColor"],"sources":["/home/luc/Documents/photobox-peru/src/components/addPhrase/addPhrase.component.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Container, Box, InputLabel, Select, MenuItem, Input, Button } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nextButtonEnabled } from \"../../features/handleFormButtons/FormButtonsSlice\";\n\nconst AddPhrase = () => {\n      const [phraseType, setPhraseType] = useState(\"\");\n      const [phraseColor, setPhraseColor] = useState(\"\");\n      const [phraseText, setPhraseText] = useState(\"\");\n      const [isHidden, setHidden] = useState(true);\n      const dispatch = useDispatch();\n\n      const backgroundColors = {\n            lightWood: \"\",\n            brownWood: \"\"\n      };\n\n      const handleChangeType = (event) => {\n            setPhraseType(event.target.value);\n            handleNextButton();\n      };\n\n      const handleChangeText = (event) => {\n            setPhraseText(event.target.value);\n      };\n\n      const handleChangeColor = (e) => {\n            setPhraseColor(e.target.value);\n      }\n\n      useEffect(() => {\n            if(phraseType === \"personalized\") {\n                  setHidden(false);\n            }\n      }, [phraseType]);\n\n      const handleNextButton = () => {\n            if(phraseType === \"personalized\") {\n                  // wait until text has value and select has value\n                  // add better formValidation\n                  dispatch(nextButtonEnabled(true));\n            } else {\n                  dispatch(nextButtonEnabled(true));\n            }\n      }\n\n\n\n      return(\n      <Container>\n            <h1>Add Phrase</h1>\n                  <InputLabel id=\"addPhraseLabel\">Choose Phrase</InputLabel>\n                  <Select\n                  labelId=\"addPhraseLabel\"\n                  value={phraseType}\n                  label=\"Phrase Type\"\n                  onChange={handleChangeType}\n                  >\n                        <MenuItem value={\"family\"}>Family</MenuItem>\n                        <MenuItem value={\"friends\"}>Friends</MenuItem>\n                        <MenuItem value={\"personalized\"}>Personalizado</MenuItem>\n                  </Select>\n                  { !isHidden ? \n                        <Fragment>\n                              <Input placeholder=\"Your text\" value={phraseText} onChange={handleChangeText}/>\n                              <InputLabel id=\"addPhraseColor\">Choose Color</InputLabel>\n                              <Select labelId=\"addPhraseColor\" value={phraseColor} label=\"Color Type\" onChange={handleChangeColor}>\n                                    <MenuItem value={\"brown\"}>Brown</MenuItem>\n                                    <MenuItem value={\"yellow\"}>Yellow</MenuItem>\n                              </Select>\n                              <Box sx={{\n                                    backgroundColor: {phraseColor}\n                              }}>\n                                    {phraseText}\n                              </Box>\n                              <Button>Add Phrase</Button>\n                        </Fragment> : null\n                  }\n      </Container>\n      );\n}\n\nexport default AddPhrase;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,EAAEC,GAAG,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAC3F,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,mDAAmD;AAAC;AAEtF,MAAMC,SAAS,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,QAAQ,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMoB,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,gBAAgB,GAAG;IACnBC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACjB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAC9BZ,aAAa,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjCC,gBAAgB,EAAE;EACxB,CAAC;EAED,MAAMC,gBAAgB,GAAIJ,KAAK,IAAK;IAC9BR,aAAa,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC3BhB,cAAc,CAACgB,CAAC,CAACL,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED5B,SAAS,CAAC,MAAM;IACV,IAAGa,UAAU,KAAK,cAAc,EAAE;MAC5BO,SAAS,CAAC,KAAK,CAAC;IACtB;EACN,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,MAAMgB,gBAAgB,GAAG,MAAM;IACzB,IAAGhB,UAAU,KAAK,cAAc,EAAE;MAC5B;MACA;MACAQ,QAAQ,CAACV,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC,MAAM;MACDU,QAAQ,CAACV,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACvC;EACN,CAAC;EAID,oBACA,QAAC,SAAS;IAAA,wBACJ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACb,QAAC,UAAU;MAAC,EAAE,EAAC,gBAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC1D,QAAC,MAAM;MACP,OAAO,EAAC,gBAAgB;MACxB,KAAK,EAAEE,UAAW;MAClB,KAAK,EAAC,aAAa;MACnB,QAAQ,EAAEY,gBAAiB;MAAA,wBAErB,QAAC,QAAQ;QAAC,KAAK,EAAE,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC5C,QAAC,QAAQ;QAAC,KAAK,EAAE,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC9C,QAAC,QAAQ;QAAC,KAAK,EAAE,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD,EACP,CAACN,QAAQ,gBACL,QAAC,QAAQ;MAAA,wBACH,QAAC,KAAK;QAAC,WAAW,EAAC,WAAW;QAAC,KAAK,EAAEF,UAAW;QAAC,QAAQ,EAAEa;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/E,QAAC,UAAU;QAAC,EAAE,EAAC,gBAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eACzD,QAAC,MAAM;QAAC,OAAO,EAAC,gBAAgB;QAAC,KAAK,EAAEf,WAAY;QAAC,KAAK,EAAC,YAAY;QAAC,QAAQ,EAAEgB,iBAAkB;QAAA,wBAC9F,QAAC,QAAQ;UAAC,KAAK,EAAE,OAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC1C,QAAC,QAAQ;UAAC,KAAK,EAAE,QAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,eACT,QAAC,GAAG;QAAC,EAAE,EAAE;UACHE,eAAe,EAAE;YAAClB;UAAW;QACnC,CAAE;QAAA,UACKE;MAAU;QAAA;QAAA;QAAA;MAAA,QACX,eACN,QAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB,GAAG,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAExB;AAElB,CAAC;AAAA,GA3EKL,SAAS;EAAA,QAKQF,WAAW;AAAA;AAAA,KAL5BE,SAAS;AA6Ef,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}