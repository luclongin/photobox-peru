{"ast":null,"code":"var _jsxFileName = \"/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport ReactCrop, { centerCrop, makeAspectCrop, Crop, PixelCrop } from 'react-image-crop';\nimport { canvasPreview } from './canvasPreview';\nimport { useDebounceEffect } from '../../utils/useDebounceEffect';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPhotoCard = () => {\n  _s();\n  const [imgSrc, setImgSrc] = useState('');\n  const previewCanvasRef = useRef < HTMLCanvasElement > null;\n  const imgRef = useRef < HTMLImageElement > null;\n  const [crop, setCrop] = useState < Crop > {};\n  const [completedCrop, setCompletedCrop] = useState < PixelCrop > {};\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setCrop(undefined); // Makes crop preview update between images.\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        var _reader$result;\n        return setImgSrc(((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '');\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  const onImageLoad = e => {\n    if (aspect) {\n      const {\n        width,\n        height\n      } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  };\n  useDebounceEffect(async () => {\n    if (completedCrop !== null && completedCrop !== void 0 && completedCrop.width && completedCrop !== null && completedCrop !== void 0 && completedCrop.height && imgRef.current && previewCanvasRef.current) {\n      // We use canvasPreview as it's much faster than imgPreview.\n      canvasPreview(imgRef.current, previewCanvasRef.current, completedCrop);\n    }\n  }, 100, [completedCrop]);\n  const PaperButton = styled(Paper)({\n    elevation: \"2\",\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 220,\n    height: 220,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '10px',\n    border: '2px color #666',\n    \"&:hover\": {\n      backgroundColor: \"rgb(100,100,100,0.8)\",\n      \"& svg\": {\n        color: \"rgb(243, 116, 231, 0.1)\"\n      },\n      \"& p\": {\n        color: 'white',\n        display: 'block'\n      }\n    },\n    position: 'relative'\n  });\n  const handleUploadCardClick = () => {};\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      component: \"label\",\n      onClick: handleUploadCardClick,\n      children: [/*#__PURE__*/_jsxDEV(PaperButton, {\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n          sx: {\n            fontSize: '8em',\n            color: '#F374E7'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h10\",\n          component: \"p\",\n          hidden: true,\n          style: {\n            position: 'absolute',\n            bottom: 0\n          },\n          children: \"Haz un clic aqu\\xED para subir una foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        hidden: true,\n        accept: \"image/*\",\n        multiple: true,\n        type: \"file\",\n        onChange: onSelectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), !!imgSrc && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      crop: crop,\n      onChange: (_, percentCrop) => setCrop(percentCrop),\n      onComplete: c => setCompletedCrop(c),\n      aspect: aspect,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        alt: \"Crop me\",\n        src: imgSrc,\n        style: {\n          transform: `scale(${scale}) rotate(${rotate}deg)`\n        },\n        onLoad: onImageLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !!completedCrop && /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef,\n        style: {\n          border: '1px solid black',\n          objectFit: 'contain',\n          width: completedCrop.width,\n          height: completedCrop.height\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n};\n_s(UploadPhotoCard, \"vK9QDH4Lgab4DMGpdEPjKFVAkEw=\", false, function () {\n  return [useDebounceEffect];\n});\n_c = UploadPhotoCard;\nexport default UploadPhotoCard;\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoCard\");","map":{"version":3,"names":["React","useState","Button","Paper","styled","Typography","AddIcon","ReactCrop","centerCrop","makeAspectCrop","Crop","PixelCrop","canvasPreview","useDebounceEffect","UploadPhotoCard","imgSrc","setImgSrc","previewCanvasRef","useRef","HTMLCanvasElement","imgRef","HTMLImageElement","crop","setCrop","completedCrop","setCompletedCrop","onSelectFile","e","target","files","length","undefined","reader","FileReader","addEventListener","result","toString","readAsDataURL","onImageLoad","aspect","width","height","currentTarget","centerAspectCrop","current","PaperButton","elevation","display","flexWrap","justifyContent","alignItems","borderRadius","border","backgroundColor","color","position","handleUploadCardClick","fontSize","bottom","_","percentCrop","c","transform","scale","rotate","objectFit"],"sources":["/home/luc/Documents/photobox-peru/src/components/uploadPhotoCard/uploadPhotoCard.component.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { Button, Paper, styled, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport ReactCrop, {\n      centerCrop,\n      makeAspectCrop,\n      Crop,\n      PixelCrop,\n} from 'react-image-crop';\nimport { canvasPreview } from './canvasPreview';\nimport { useDebounceEffect } from '../../utils/useDebounceEffect';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nconst UploadPhotoCard = () => {\n      const [imgSrc, setImgSrc] = useState('');\n      const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n      const imgRef = useRef<HTMLImageElement>(null);\n      const [crop, setCrop] = useState<Crop>({});\n      const [completedCrop, setCompletedCrop] = useState<PixelCrop>({});\n      \n      const onSelectFile = (e) => {\n            if (e.target.files && e.target.files.length > 0) {\n                  setCrop(undefined) // Makes crop preview update between images.\n                  const reader = new FileReader()\n                  reader.addEventListener('load', () =>\n                        setImgSrc(reader.result?.toString() || ''),\n                  )\n                  reader.readAsDataURL(e.target.files[0])\n            }\n      }\n        \n      const onImageLoad = (e) => {\n            if (aspect) {\n                  const { width, height } = e.currentTarget\n                  setCrop(centerAspectCrop(width, height, aspect))\n            }\n      }\n\n      useDebounceEffect(\n            async () => {\n              if (\n                completedCrop?.width &&\n                completedCrop?.height &&\n                imgRef.current &&\n                previewCanvasRef.current\n              ) {\n                // We use canvasPreview as it's much faster than imgPreview.\n                canvasPreview(\n                  imgRef.current,\n                  previewCanvasRef.current,\n                  completedCrop\n                )\n              }\n            },\n            100,\n            [completedCrop],\n          )\n\n      const PaperButton = styled(Paper) ({\n            elevation: \"2\",\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: 220,\n            height: 220,\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '10px',\n            border: '2px color #666',\n            \"&:hover\": {\n                  backgroundColor: \"rgb(100,100,100,0.8)\",\n                  \"& svg\": {\n                        color: \"rgb(243, 116, 231, 0.1)\"\n                  },\n                  \"& p\": {\n                        color: 'white',\n                        display: 'block'\n                  }\n            },\n            position: 'relative'\n            \n      })\n\n      const handleUploadCardClick = () => {\n            \n      }\n\n      return(\n            <Container>\n            <Button component=\"label\" onClick={handleUploadCardClick}>\n                  <PaperButton>\n                        <AddIcon sx={{fontSize: '8em', color: '#F374E7'}}/>\n                        <Typography variant=\"h10\" component=\"p\" hidden style={{\n                              position: 'absolute',\n                              bottom: 0\n                        }}>\n                              Haz un clic aqu√≠ para subir una foto\n                        </Typography>\n                  </PaperButton>\n                  <input hidden accept=\"image/*\" multiple type=\"file\" onChange={onSelectFile}/>\n            </Button>\n            {!!imgSrc && (\n                  <ReactCrop\n                    crop={crop}\n                    onChange={(_, percentCrop) => setCrop(percentCrop)}\n                    onComplete={(c) => setCompletedCrop(c)}\n                    aspect={aspect}\n                  >\n                    <img\n                      ref={imgRef}\n                      alt=\"Crop me\"\n                      src={imgSrc}\n                      style={{ transform: `scale(${scale}) rotate(${rotate}deg)` }}\n                      onLoad={onImageLoad}\n                    />\n                  </ReactCrop>\n                )}\n            <div>\n                  {!!completedCrop && (\n                    <canvas\n                      ref={previewCanvasRef}\n                      style={{\n                        border: '1px solid black',\n                        objectFit: 'contain',\n                        width: completedCrop.width,\n                        height: completedCrop.height,\n                      }}\n                    />\n                  )}\n            </div>\n            \n            </Container>\n      );\n}\n\nexport default UploadPhotoCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}